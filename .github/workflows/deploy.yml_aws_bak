name: Deploy to AWS ECS with Public IP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set AWS Variables
        run: echo "ECR_REPO=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-node-app" >> $GITHUB_ENV

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REPO

      - name: Build and Push Docker Image
        run: |
          docker build -t my-node-app .
          docker tag my-node-app $ECR_REPO:latest
          docker push $ECR_REPO:latest

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster my-node-cluster --service my-node-service --force-new-deployment

      - name: Wait for ECS Task to Start
        run: |
          echo "Waiting for ECS task to start..."
          sleep 30  # Adjust if needed

      - name: Get Public IP of ECS Task
        run: |
          TASK_ID=$(aws ecs list-tasks --cluster my-node-cluster --query "taskArns[0]" --output text)
          NETWORK_INTERFACE_ID=$(aws ecs describe-tasks --cluster my-node-cluster --tasks $TASK_ID --query "tasks[0].attachments[0].details[?name=='networkInterfaceId'].value" --output text)
          PUBLIC_IP=$(aws ec2 describe-network-interfaces --network-interface-ids $NETWORK_INTERFACE_ID --query "NetworkInterfaces[0].Association.PublicIp" --output text)
          echo "Public URL: http://$PUBLIC_IP:3000"
